openapi: 3.0.3
info:
  description: "Unofficial HackTheBox API documentation."
  version: "1.0.0"
  title: "HackTheBox API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "github@qu35t-mail.simplelogin.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  - url: "https://www.hackthebox.com/api/v4"
tags:
- name: "Sherlocks"
  description: "Blue team mode"
  externalDocs:
    description: "HackTheBox link"
    url: "https://app.hackthebox.com/sherlocks"
- name: "Machines"
  description: "HackTheBox machines"
  externalDocs:
    description: "HackTheBox link"
    url: "https://app.hackthebox.com/machines"
- name: "Challenges"
  description: "HackTheBox challenges"
  externalDocs:
    description: "HackTheBox link"
    url: "https://app.hackthebox.com/challenges"
paths:
  /sherlocks:
    get:
      tags:
        - "Sherlocks"
      summary: "List all sherlocks."
      description: "Returns a list of all available sherlocks."
      parameters:
        - in: query
          name: state
          schema:
            type: string
            enum:
              - active
              - retired
              - unreleased
          required: false
          description: "State of the sherlocks to filter by."
      responses:
        '200':
          description: "successful operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Challenge'
                  links:
                    $ref: '#/components/schemas/Links'
                  meta:
                    $ref: '#/components/schemas/Meta'
              examples:
                example:
                  value: '{"data":[{"id":552,"name":"Meerkat","difficulty":"Easy","state":"active","solves":1916,"is_owned":false,"rating":4.770642201834862,"rating_count":218,"auth_user_has_reviewed":false,"progress":10,"avatar":"https:\/\/www.hackthebox.com\/storage\/challenges\/94c7bb58efc3b337800875b5d382a072.png"}],"links":{"first":"https:\/\/www.hackthebox.com\/api\/v4\/sherlocks?page=1","last":"https:\/\/www.hackthebox.com\/api\/v4\/sherlocks?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"https:\/\/www.hackthebox.com\/api\/v4\/sherlocks?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"https:\/\/www.hackthebox.com\/api\/v4\/sherlocks","per_page":100,"to":25,"total":25}}'
      security:
        - AppToken: []

  /sherlocks/{sherlockName}:
    get:
      tags:
        - "Sherlocks"
      summary: "Get information about a sherlock."
      description: "Returns detailed information about a specific sherlock."
      parameters:
        - in: path
          name: sherlockName
          required: true
          schema:
            type: string
          description: "Name of the sherlock to retrieve information for."
      responses:
        '200':
          description: "successful operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      difficulty:
                        type: string
                      retired:
                        type: boolean
                      release_at:
                        type: string
                        format: date-time
                      state:
                        type: string
                      show_go_vip:
                        type: boolean
                      rating:
                        type: number
                        format: double
                      rating_count:
                        type: integer
                      auth_user_has_reviewed:
                        type: boolean
                      writeup_visible:
                        type: boolean
                      avatar:
                        type: string
                      favorite:
                        type: boolean
              examples:
                example:
                  value: '{"data":{"id":552,"name":"Meerkat","difficulty":"Easy","retired":false,"release_at":"2023-11-13 21:00:00","state":"active","show_go_vip":false,"rating":4.77027027027027,"rating_count":222,"auth_user_has_reviewed":false,"writeup_visible":false,"avatar":"\/storage\/challenges\/94c7bb58efc3b337800875b5d382a072.png","favorite":false}}'
      security:
        - AppToken: []

  /sherlocks/{sherlockID}/play:
    get:
      tags:
        - "Sherlocks"
      summary: "Displays the scenario, creator and files attached to the sherlock."
      description: "This endpoint retrieves detailed information about a specific sherlock challenge identified by the provided sherlockID."
      parameters:
        - in: path
          name: sherlockID
          required: true
          schema:
            type: integer
          description: "Sherlock identifier."
      responses:
        '200':
          description: "successful operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      scenario:
                        type: string
                      creators:
                        type: array
                        items:
                          $ref: '#/components/schemas/Creator'
                      file_name:
                        type: string
                      file_size:
                        type: string
              examples:
                example:
                  value: '{"data":{"id":552,"scenario":"As a fast growing startup, Forela have been utilising a business management platform. Unfortunately our documentation is scarce and our administrators aren\"t the most security aware. As our new security provider we\"d like you to take a look at some PCAP and log data we have exported to confirm if we have (or have not) been compromised.","creators":[{"id":118669,"name":"sebh24","avatar":"\/storage\/avatars\/934a85fc29e045b2b2a3406d6188d0e9.png","isRespected":false}],"file_name":"meerkat.zip","file_size":"6 MB"}}'
      security:
        - AppToken: []

  /sherlocks/{sherlockID}/progress:
    get:
      tags:
        - "Sherlocks"
      summary: "Retrieve progress on a specific sherlock challenge."
      description: "This endpoint provides the current progress of a user on a specific sherlock challenge, identified by the sherlockID."
      parameters:
        - in: path
          name: sherlockID
          required: true
          schema:
            type: integer
          description: "Sherlock identifier."
      responses:
        '200':
          description: "successful operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      is_owned:
                        type: boolean
                        description: "Indicates whether the user has completed the challenge."
                      progress:
                        type: integer
                        description: "The user's progress in percentage on the challenge."
                      total_tasks:
                        type: integer
                        description: "Total number of tasks in the challenge."
                      tasks_answered:
                        type: integer
                        description: "Number of tasks answered by the user."
                      own_rank:
                        type: integer
                        description: "The user's rank in owning the challenge."
              examples:
                example:
                  value: '{"data":{"is_owned":false,"progress":10,"total_tasks":10,"tasks_answered":1,"own_rank":1}}'
      security:
        - AppToken: []

  /sherlocks/{sherlockID}/tasks:
    get:
      tags:
        - "Sherlocks"
      summary: "Retrieve a list of tasks for a specific sherlock challenge."
      description: "This endpoint fetches a list of tasks associated with a given sherlock challenge, identified by the sherlockID."
      parameters:
        - in: path
          name: sherlockID
          required: true
          schema:
            type: integer
          description: "Sherlock identifier."
      responses:
        '200':
          description: "successful operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Task'
              examples:
                example:
                  value: '{"data":[{"id":1358,"title":"Task 1","description":"We believe our Business Management Platform server has been compromised. Please can you confirm the name of the application running?","hint":null,"type":{"id":0,"text":"task"},"task_type":{"id":0,"text":"text"},"prerequisite_id":null,"completed":false,"masked_flag":"*********t","options":[]},{"id":1359,"title":"Task 2","description":"We believe the attacker may have used a subset of the brute forcing attack category - what is the name of the attack carried out?","hint":null,"type":{"id":0,"text":"task"},"task_type":{"id":0,"text":"text"},"prerequisite_id":null,"completed":false,"masked_flag":"********** *******g","options":[]},{"id":1360,"title":"Task 3","description":"Does the vulnerability exploited have a CVE assigned - and if so, which one?","hint":null,"type":{"id":0,"text":"task"},"task_type":{"id":0,"text":"text"},"prerequisite_id":null,"completed":false,"masked_flag":"***-****-****7","options":[]},{"id":1361,"title":"Task 4","description":"Which string was appended to the API URL path to bypass the authorization filter by the attacker\"s exploit?","hint":null,"type":{"id":0,"text":"task"},"task_type":{"id":0,"text":"text"},"prerequisite_id":null,"completed":false,"masked_flag":"Please enter with no special characters!","options":[]},{"id":1362,"title":"Task 5","description":"How many combinations of usernames and passwords were used in the credential stuffing attack?","hint":null,"type":{"id":0,"text":"task"},"task_type":{"id":0,"text":"text"},"prerequisite_id":null,"completed":false,"masked_flag":"**","options":[]},{"id":1363,"title":"Task 6","description":"Which username and password combination was successful?","hint":null,"type":{"id":0,"text":"task"},"task_type":{"id":0,"text":"text"},"prerequisite_id":null,"completed":true,"flag":"seb.broom@forela.co.uk:g0vernm3nt","masked_flag":"username:password","options":[]},{"id":1364,"title":"Task 7","description":"If any, which text sharing site did the attacker utilise?","hint":null,"type":{"id":0,"text":"task"},"task_type":{"id":0,"text":"text"},"prerequisite_id":null,"completed":false,"masked_flag":"******.*o","options":[]},{"id":1366,"title":"Task 9","description":"Please provide the filename of the public key used by the attacker to gain persistence on our host.","hint":null,"type":{"id":0,"text":"task"},"task_type":{"id":0,"text":"text"},"prerequisite_id":null,"completed":false,"masked_flag":"Filename","options":[]},{"id":1367,"title":"Task 10","description":"Can you confirmed the file modified by the attacker to gain persistence?","hint":null,"type":{"id":0,"text":"task"},"task_type":{"id":0,"text":"text"},"prerequisite_id":null,"completed":false,"masked_flag":"\/****\/******\/.***\/**********_***s","options":[]},{"id":1368,"title":"Task 11","description":"Can you confirm the MITRE technique ID of this type of persistence mechanism?","hint":null,"type":{"id":0,"text":"task"},"task_type":{"id":0,"text":"text"},"prerequisite_id":null,"completed":false,"masked_flag":"T****.***","options":[]}]}'
      security:
        - AppToken: []

  /sherlocks/{sherlockID}/download_link:
    get:
      tags:
        - "Sherlocks"
      summary: "Retrieve the download link for a sherlock challenge."
      description: "This endpoint provides a direct download link for the files associated with a specific sherlock challenge, identified by the sherlockID."
      parameters:
        - in: path
          name: sherlockID
          required: true
          schema:
            type: integer
          description: "Sherlock identifier."
      responses:
        '200':
          description: "successful operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    description: "The URL for downloading the challenge resources."
                  expires_in:
                    type: integer
                    description: "Time in seconds until the download link expires."
              examples:
                example:
                  value: '{"url":"https:\/\/challenges-cdn.hackthebox.com\/sherlocks\/easy\/meerkat.zip?u=128441&p=mp&e=1702856652&t=1702849452&h=e07373d7533a36ed35788f052fed02478d28a15320ff2a7829b717cd480e2de5","expires_in":7200}'
      security:
        - AppToken: []

  /sherlocks/{sherlockID}/tasks/{taskID}/flag:
    post:
      tags:
        - "Sherlocks"
      summary: "Submit a flag for a specific task in a sherlock challenge."
      description: "This endpoint allows participants to submit a flag for validation for a specific task within a sherlock challenge."
      parameters:
        - in: path
          name: sherlockID
          required: true
          schema:
            type: integer
          description: "Sherlock identifier."
        - in: path
          name: taskID
          required: true
          schema:
            type: integer
          description: "Unique identifier of the specific task within the sherlock challenge."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                flag:
                  type: string
                  description: "The flag to be validated for the task."
      responses:
        '200':
          description: "successful operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: "Response message indicating whether the submitted flag is correct or incorrect."
              examples:
                example:
                  value: '{"message":"Incorrect task flag!"}'
      security:
        - AppToken: []

    # GET /api/v4/sherlocks/560/writeup
    # {"data":{"official":{"filename":"Knock Knock.pdf","sha256":"b61031681bc5723b238b071d46cf7117730084e68d1942a7c0488f7a30db153a","url":"https:\/\/www.hackthebox.com\/api\/v4\/sherlocks\/560\/writeup\/official"}}}

    # GET /api/v4/review/sherlock/560
    # {"count":14,"average":4.6,"info":[{"id":4594,"user_id":287476,"stars":5,"title":"Really fun","message":"Whilst there were some elements that left my ripping my hair out for a period of time, this was a fantastic lab.\n\nYou're forced to learn about time-lining of events, filtering packets and techniques used by TA's during the initial stages of the Kill-Chain.\n\nThanks, CyberJunkie","created_at":"2023-11-18T14:00:30.000000Z","helpful_reviews_count":4,"authUserInHelpfulChallengeReviews":false,"released":1,"user":{"id":287476,"name":"0xFT","avatar":"\/storage\/avatars\/282b2fff1192c3729168227bde633ad5.png"},"helpful_reviews":[{"id":103,"user_id":468989,"review_id":4594},{"id":109,"user_id":326815,"review_id":4594},{"id":111,"user_id":795682,"review_id":4594},{"id":114,"user_id":128441,"review_id":4594}]}]}

    # GET /api/v4/sherlocks/560/info
    # {"data":{"id":560,"description":"You are thrusted into a digital crisis at Forela - a crucial Dev server has fallen victim to a cyber attack. This incident unfolds at a critical time for the company as it is expanding its business in Pakistan, under the leadership of senior dev Abdullah. Despite assurances of server hardening, the server was mistakenly exposed to the internet, creating a doorway for the threat actor. The task involves swift analysis & reporting to prevent catastrophic damage to the company's operations. Equipped with a packet capture from the time of the incident, players must sift through a sea of data, with a 1-2 days margin of uncertainty. This cybersecurity whodunit will put your forensic skills to the test, seeking answers to how the attacker breached their defenses in the first place.\r\n\r\n\r\nWarning: This Sherlock will require an element of OSINT to complete fully.","user_owns_count":122}}

    # GET /api/v4/sherlocks/560/writeup/official
    # %PDF-1.7
    
    # TODO : review

components:
  schemas:
    Challenge:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        difficulty:
          type: string
        state:
          type: string
        solves:
          type: integer
        is_owned:
          type: boolean
        rating:
          type: number
        rating_count:
          type: integer
        auth_user_has_reviewed:
          type: boolean
        progress:
          type: integer
        avatar:
          type: string
    Links:
      type: object
      properties:
        first:
          type: string
        last:
          type: string
        prev:
          type: string
        next:
          type: string
    Meta:
      type: object
      properties:
        current_page:
          type: integer
        from:
          type: integer
        last_page:
          type: integer
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        path:
          type: string
        per_page:
          type: integer
        to:
          type: integer
        total:
          type: integer
    Link:
      type: object
      properties:
        url:
          type: string
        label:
          type: string
        active:
          type: boolean
    Creator:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        avatar:
          type: string
        isRespected:
          type: boolean
    Task:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        hint:
          type: string
        type:
          type: object
          properties:
            id:
              type: integer
            text:
              type: string
        task_type:
          type: object
          properties:
            id:
              type: integer
            text:
              type: string
        prerequisite_id:
          type: integer
        completed:
          type: boolean
        masked_flag:
          type: string
        options:
          type: array
          items:
            type: string
        flag:
          type: string

  securitySchemes:
    AppToken:
      type: http
      scheme: bearer
      bearerFormat: JWT
