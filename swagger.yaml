openapi: 3.0.3
info:
  description: "Unofficial HackTheBox API documentation."
  version: "1.0.0"
  title: "HackTheBox API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "github@qu35t-mail.simplelogin.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  - url: "https://www.hackthebox.com/api/v4"
tags:
- name: "Sherlocks"
  description: "Blue team mode"
  externalDocs:
    description: "HackTheBox link"
    url: "https://app.hackthebox.com/sherlocks"
- name: "Machines"
  description: "HackTheBox machines"
  externalDocs:
    description: "HackTheBox link"
    url: "https://app.hackthebox.com/machines"
- name: "Challenges"
  description: "HackTheBox challenges"
  externalDocs:
    description: "HackTheBox link"
    url: "https://app.hackthebox.com/challenges"
paths:
  /sherlocks:
    get:
      tags:
        - "Sherlocks"
      summary: "List all sherlocks."
      description: "Returns a list of all available sherlocks."
      parameters:
        - in: query
          name: state
          schema:
            type: string
            enum:
              - active
              - retired
              - unreleased
          required: false
          description: "State of the sherlocks to filter by."
      responses:
        '200':
          description: "successful operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Challenge'
                  links:
                    $ref: '#/components/schemas/Links'
                  meta:
                    $ref: '#/components/schemas/Meta'
              examples:
                example:
                  value: '{"data":[{"id":552,"name":"Meerkat","difficulty":"Easy","state":"active","solves":1916,"is_owned":false,"rating":4.770642201834862,"rating_count":218,"auth_user_has_reviewed":false,"progress":10,"avatar":"https:\/\/www.hackthebox.com\/storage\/challenges\/94c7bb58efc3b337800875b5d382a072.png"}],"links":{"first":"https:\/\/www.hackthebox.com\/api\/v4\/sherlocks?page=1","last":"https:\/\/www.hackthebox.com\/api\/v4\/sherlocks?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"https:\/\/www.hackthebox.com\/api\/v4\/sherlocks?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"https:\/\/www.hackthebox.com\/api\/v4\/sherlocks","per_page":100,"to":25,"total":25}}'
      security:
        - AppToken: []

  /sherlocks/{sherlockName}:
    get:
      tags:
        - "Sherlocks"
      summary: "Get information about a sherlock."
      description: "Returns detailed information about a specific sherlock."
      parameters:
        - in: path
          name: sherlockName
          required: true
          schema:
            type: string
          description: "Name of the sherlock to retrieve information for."
      responses:
        '200':
          description: "successful operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      difficulty:
                        type: string
                      retired:
                        type: boolean
                      release_at:
                        type: string
                        format: date-time
                      state:
                        type: string
                      show_go_vip:
                        type: boolean
                      rating:
                        type: number
                        format: double
                      rating_count:
                        type: integer
                      auth_user_has_reviewed:
                        type: boolean
                      writeup_visible:
                        type: boolean
                      avatar:
                        type: string
                      favorite:
                        type: boolean
              examples:
                example:
                  value: '{"data":{"id":552,"name":"Meerkat","difficulty":"Easy","retired":false,"release_at":"2023-11-13 21:00:00","state":"active","show_go_vip":false,"rating":4.77027027027027,"rating_count":222,"auth_user_has_reviewed":false,"writeup_visible":false,"avatar":"\/storage\/challenges\/94c7bb58efc3b337800875b5d382a072.png","favorite":false}}'
      security:
        - AppToken: []


components:
  schemas:
    Challenge:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        difficulty:
          type: string
        state:
          type: string
        solves:
          type: integer
        is_owned:
          type: boolean
        rating:
          type: number
        rating_count:
          type: integer
        auth_user_has_reviewed:
          type: boolean
        progress:
          type: integer
        avatar:
          type: string
    Links:
      type: object
      properties:
        first:
          type: string
        last:
          type: string
        prev:
          type: string
        next:
          type: string
    Meta:
      type: object
      properties:
        current_page:
          type: integer
        from:
          type: integer
        last_page:
          type: integer
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        path:
          type: string
        per_page:
          type: integer
        to:
          type: integer
        total:
          type: integer
    Link:
      type: object
      properties:
        url:
          type: string
        label:
          type: string
        active:
          type: boolean

  securitySchemes:
    AppToken:
      type: http
      scheme: bearer
      bearerFormat: JWT
